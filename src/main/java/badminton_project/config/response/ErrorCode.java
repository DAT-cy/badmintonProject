package badminton_project.config.response;

import lombok.AllArgsConstructor;
import lombok.Getter;

@Getter
@AllArgsConstructor
public enum ErrorCode {
    FORBIDDEN_ERROR(StatusCode.FORBIDDEN, "FORBIDDEN-ERR-403", "FORBIDDEN"),
    BAD_REQUEST(StatusCode.BAD_REQUEST, "COMMON-ERR-400", "BAD REQUEST"),
    UPLOAD_FILE_ERR(StatusCode.BAD_REQUEST, "FILE-ERR-400", "UPLOAD FILE ERR"),
    JWT_EXPIRED(StatusCode.UNAUTHORIZED, "AUTH-ERR-401", "JWT EXPIRED"),
    JWT_INVALID(StatusCode.UNAUTHORIZED, "AUTH-ERR-402", "INVALID JWT SIGNATURE"),
    JWT_MALFORMED(StatusCode.UNAUTHORIZED, "AUTH-ERR-403", "INVALID JWT TOKEN"),
    JWT_UNSUPPORTED(StatusCode.UNAUTHORIZED, "AUTH-ERR-404", "JWT TOKEN UNSUPPORTED"),
    USERNAME_ALREADY_EXISTS(StatusCode.BAD_REQUEST, "AUTH-ERR-405", "USERNAME ALREADY EXISTS"),
    TOKEN_EXPIRED(StatusCode.BAD_REQUEST, "AUTH-ERR-407", "TOKEN EXPIRED"),
    TOKEN_NOT_FOUND(StatusCode.NOT_FOUND, "AUTH-ERR-408", "TOKEN NOT FOUND"),
    UNAUTHORIZED(StatusCode.UNAUTHORIZED, "COMMON-ERR-402", "UNAUTHORIZED"),
    ENTITY_NOT_FOUND(StatusCode.NOT_FOUND, "COMMON-ERR-404", "ENTITY NOT FOUND"),
    INTER_SERVER_ERROR(StatusCode.INTERNAL_SERVER_ERROR, "COMMON-ERR-500", "INTER SERVER ERROR"),
    API_NOT_FOUND(StatusCode.NOT_FOUND, "API-ERR-404", "API NOT FOUND"),
    ACCOUNT_DEACTIVATE(StatusCode.UNAUTHORIZED, "AUTH-ERR-413", "DEACTIVATED ACCOUNT."),
    WRONG_PASSWORD(StatusCode.UNAUTHORIZED, "AUTH-ERR-408", "WRONG PASSWORD."),
    ;

    private int status;
    private String errorCode;
    private String message;
}
